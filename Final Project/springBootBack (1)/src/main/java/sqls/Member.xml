<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mul.camp.a.dao.MemberDao">

<select id="allMember" resultType="mul.camp.a.dto.MemberDto">
	SELECT * FROM META_MEMBER
</select>

<select id="getId" parameterType="mul.camp.a.dto.MemberDto" resultType="java.lang.Integer">
	SELECT NVL(COUNT(*), 0)
	FROM META_MEMBER
	WHERE id=#{id}
</select>

<insert id="addmember" parameterType="mul.camp.a.dto.MemberDto" >
	INSERT INTO META_MEMBER(ID, PWD, NAME, EMAIL, GENDER, PHONE, NICKNAME, HEIGHT, WEIGHT, BIRTH, AUTH, SUBSCRIBE, DEL,BMI,PROFILE)
	VALUES(#{id}, #{pwd}, #{name}, #{email}, #{gender}, #{phone}, #{nickname}, #{height}, #{weight}, #{birth}, 0, 0, 'N',7,'profile3')
</insert>

<select id="login" parameterType="mul.camp.a.dto.MemberDto" resultType="mul.camp.a.dto.MemberDto">
	SELECT ID, NAME, EMAIL, AUTH
	FROM META_MEMBER
	WHERE ID=#{id} AND PWD=#{pwd}
</select>

<!-- #21# Web용 _관리자 login -->
<select id="loginWeb" parameterType="mul.camp.a.dto.MemberDto" resultType="mul.camp.a.dto.MemberDto">
	SELECT ID, NAME, EMAIL, AUTH
	FROM META_MEMBER
	WHERE ID=#{id} AND PWD=#{pwd} AND AUTH=1
</select>

<!-- #21# ID 중복체크 -->
<select id="idCheck" parameterType="String" resultType="Integer">
	SELECT COUNT(*)
	FROM META_MEMBER
	WHERE ID=#{id}
</select>

<!-- #21# 회원정보 수정 -->
<update id="userUpdate" parameterType="mul.camp.a.dto.MemberDto">
	UPDATE META_MEMBER
	SET NICKNAME=#{nickname}, NAME=#{name}, EMAIL=#{email}, PHONE=#{phone}, HEIGHT=#{height}, WEIGHT=#{weight}, BIRTH=#{birth}, GENDER=#{gender}, PROFILE=#{profile}
	WHERE ID=#{id}
</update>

<!--해빈 추가 아이디 찾기-->
<select id="searchId" parameterType = "mul.camp.a.dto.MemberDto" resultType="String">
	SELECT ID
	FROM META_MEMBER
	WHERE NAME=#{name} AND BIRTH=#{birth}
</select>
<!-- //비밀번호 찾기 -->
<select id="searchPwd" parameterType = "mul.camp.a.dto.MemberDto" resultType="String">
	SELECT PWD
	FROM META_MEMBER
	WHERE ID=#{id} AND NAME=#{name} AND BIRTH=#{birth}
</select>

<!-- #21# (Web_관리자용) 검색 + 페이징 + 회원목록 -->
<!-- (SELECT ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC) AS RNUM, ID, NAME, EMAIL, GENDER, PHONE, NICKNAME, HEIGHT, WEIGHT, DEL, BIRTH, AUTH, SUBSCRIBE -->
<select id="getMemberListSearchPage" parameterType="mul.camp.a.dto.MemberParam" resultType="mul.camp.a.dto.MemberDto">
	SELECT *
	FROM 
		<!-- 검색조건이 있다면 검색조건에 맞는 게시글 찾기 & WHERE절에 1=1 항상 참 조건을 걸어둔 이유는 조건에 맞지 않아 error가 발생하는 경우를 방지하기 위함 -->
		(SELECT ROW_NUMBER()OVER(ORDER BY NAME) AS RNUM, ID, NAME, EMAIL, GENDER, PHONE, NICKNAME, HEIGHT, WEIGHT, DEL, BIRTH, AUTH, SUBSCRIBE
		FROM META_MEMBER
		WHERE 1=1
			<if test="choice != null and choice != '' and search != null and search != '' ">
				<if test="choice == 'userId'">
					AND ID LIKE '%'||#{search}||'%' AND AUTH=0
				</if>
				<if test="choice == 'userName'">
					AND NAME LIKE '%'||#{search}||'%' AND AUTH=0
				</if>
			</if>)
	<!-- start ~ end 사이의 RUNM번의 게시글 정보 반환 -->
	WHERE RNUM BETWEEN ${start} AND ${end} AND AUTH=0
</select>

<!-- #21# (Web _관리자용) 회원목록 총 개수 -->
<select id="getMemberCount" parameterType="mul.camp.a.dto.MemberParam" resultType="Integer">
	 SELECT NVL(COUNT(*), 0) AS CNT
	 FROM META_MEMBER
	 WHERE 1=1
		 <!-- 검색조건이 있다면 검색조건에 맞는 게시글 찾기 -->
		<if test="choice != null and choice != '' and search != null and search != '' ">
			<if test="choice == 'userId'">
				AND ID LIKE '%'||#{search}||'%' AND AUTH=0
			</if>
			<if test="choice == 'userName'">
				AND NAME LIKE '%'||#{search}||'%' AND AUTH=0
			</if>
		</if>
</select>

<!-- #21# (Web _관리자용) 회원 탈퇴처리 -->
<update id="userDelWeb" parameterType="String">
	UPDATE META_MEMBER
	SET DEL='Y'
	WHERE ID=#{id}
</update>

<!-- #21# (Web _관리자용) 회원 복구처리 -->
<update id="userRecoveryWeb" parameterType="String">
	UPDATE META_MEMBER
	SET DEL='N'
	WHERE ID=#{id}
</update>

<!-- #21# (Web _관리자용) 회원 완전삭제 _(1)[오늘의식단] 식단기록 DB 내 삭제 -->
<delete id="userDelRememberMealsWeb" parameterType="mul.camp.a.dto.MemberDto">
	DELETE
	FROM META_SUBSCRIBE_REMEMBERMEALS
	WHERE EXISTS (SELECT *
					FROM META_SUBSCRIBE_REMEMBERMEALS
					WHERE SUBREM_ID=#{id})
</delete>

<!-- #21# (Web _관리자용) 회원 완전삭제 _(2)[SNS] SNS DB 내 삭제 -->
<delete id="userDelWebSnsWeb" parameterType="mul.camp.a.dto.MemberDto">
	DELETE
	FROM META_SNS
	WHERE EXISTS (SELECT *
  					FROM META_SNS
  					WHERE id=#{id})
</delete>

<!-- #21# (Web _관리자용) 회원 완전삭제 _(3)[나의식단] 식단기록 DB 내 삭제 -->
<delete id="userDelFoodListMealsWeb" parameterType="mul.camp.a.dto.MemberDto">
	DELETE
	FROM META_FOOD_LIST_MEALS
	WHERE EXISTS (SELECT *
  					FROM META_FOOD_LIST_MEALS
  					WHERE id=#{id})
</delete>

<!-- #21# (Web _관리자용) 회원 완전삭제 _(4)[구독] 구독 DB 내 삭제 -->
<delete id="userDelSubscribeWeb" parameterType="mul.camp.a.dto.MemberDto">
	DELETE
	FROM MATA_SUBSCRIBE
	WHERE EXISTS (SELECT *
  					FROM MATA_SUBSCRIBE
  					WHERE SUB_ID=#{id})
</delete>

<!-- #21# (Web _관리자용) 회원 완전삭제 _(5)[회원] 회원 DB 내 삭제 -->
<delete id="userDelMemberWeb" parameterType="mul.camp.a.dto.MemberDto">
	DELETE
	FROM META_MEMBER
	WHERE ID=#{id}
</delete>
</mapper>







